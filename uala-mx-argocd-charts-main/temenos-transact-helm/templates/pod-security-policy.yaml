{{ if .Values.podSecurityPolicy.enabled }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ include "transact.fullname" . }}{{ "-restricted" }}
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe to use.
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    # Require the container to run without root privileges.
    rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "transact.fullname" . }}{{ "-restricted" }}
  labels:
      kubernetes.io/cluster-service: "true"
      eks.amazonaws.com/component: pod-security-policy
      app.kubernetes.io/name: {{ include "transact.name" . }}{{ "-app" }}
      helm.sh/chart: {{ include "transact.chart" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
- apiGroups:
  - policy
  resourceNames:
  - {{ include "transact.fullname" . }}{{ "-restricted" }}
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "transact.fullname" . }}{{ "-restricted" }}
  annotations:
    kubernetes.io/description: 'Restricted pod policy.'
  labels:
    kubernetes.io/cluster-service: "true"
    eks.amazonaws.com/component: pod-security-policy
    app.kubernetes.io/name: {{ include "transact.name" . }}{{ "-app" }}
    helm.sh/chart: {{ include "transact.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "transact.fullname" . }}{{ "-restricted" }}
subjects:
  - kind: ServiceAccount
    name: {{ include "serviceaccount.app.name" . | quote }}
  - kind: ServiceAccount
    name: {{ include "serviceaccount.web.name" . | quote }}
  - kind: ServiceAccount
    name: {{ include "serviceaccount.api.name" . | quote }}
{{- end }}